controller_manager:
  ros__parameters:
    update_rate: 10 # [Hz]
    # use_sim_time: true

    diff_controller:
      type: diff_drive_controller/DiffDriveController

    servo_controller:                                               # used with sim robot
      type: position_controllers/JointGroupPositionController

    lidar_controller:                                               # used with real robot
      type: lidar_controllers/LidarController

    joint_broadcaster:
      type: joint_state_broadcaster/JointStateBroadcaster

diff_controller:
  ros__parameters:

    publish_rate: 50.0  # [Hz]

    base_frame_id: base_link

    left_wheel_names: ['left_wheel_joint']
    right_wheel_names: ['right_wheel_joint']

    wheel_separation: 0.297   # [m]
    wheel_radius: 0.033       # [m]

    use_stamped_vel: false

    # open_loop: false    

    # wheels_per_side: x
    # wheel_separation_multiplier: x
    # left_wheel_radius_multiplier: x
    # right_wheel_radius_multiplier: x

    # odom_frame_id: x
    # pose_covariance_diagonal: x
    # twist_covariance_diagonal: x
    # open_loop: x
    # enable_odom_tf: x

    cmd_vel_timeout: 0.25    #[s]
    # publish_limited_velocity: x
    # velocity_rolling_window_size: x
    

    # linear.x.has_velocity_limits: false
    # linear.x.has_acceleration_limits: false
    # linear.x.has_jerk_limits: false
    # linear.x.max_velocity: NAN
    # linear.x.min_velocity: NAN
    # linear.x.max_acceleration: NAN
    # linear.x.min_acceleration: NAN
    # linear.x.max_jerk: NAN
    # linear.x.min_jerk: NAN

    # angular.z.has_velocity_limits: false
    # angular.z.has_acceleration_limits: false
    # angular.z.has_jerk_limits: false
    # angular.z.max_velocity: NAN
    # angular.z.min_velocity: NAN
    # angular.z.max_acceleration: NAN
    # angular.z.min_acceleration: NAN
    # angular.z.max_jerk: NAN
    # angular.z.min_jerk: NAN


servo_controller:           # used with sim robot
  ros__parameters:

    joints:
      - servo_motor_joint

lidar_controller:          # used with real robot
  ros__parameters:
   frame_id: ultrasonic_sensor_frame
   publish_rate: 5.0      # [Hz]
   joints:
     - servo_motor_joint
   interface_name: position   # servo control type
   angle_min: -0.01             # start angle of the scan [rad]
   angle_max: 0.01             # end angle of the scan [rad]
   angle_increment: 0.02       # angular distance between measurements [rad]
   time_increment: 1.0        # time between measurements [seconds] - if your scanner
                              # is moving, this will be used in interpolating position
                              # of 3d points
   scan_time: 1.0             # time between scans [seconds]
   range_min: 13.0            # minimum range value [m]
   range_max: 0.01            # maximum range value [m]